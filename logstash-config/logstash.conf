input {
  kafka {
    group_id => "es-simulated-consumer"
    topics => "simulated-consumption"
    bootstrap_servers => "kafka:29092"
    auto_offset_reset => "earliest"
    decorate_events => "true"
    codec => avro_schema_registry {
      endpoint => "http://schema-registry:8081"
    }
    value_deserializer_class => "org.apache.kafka.common.serialization.ByteArrayDeserializer"
    tags => ["simulated"]
 }

 kafka {
   group_id => "es-predicted-consumer"
   topics => "predicted-consumption"
   bootstrap_servers => "kafka:29092"
   auto_offset_reset => "earliest"
   decorate_events => "true"
   codec => avro_schema_registry {
     endpoint => "http://schema-registry:8081"
   }
   value_deserializer_class => "org.apache.kafka.common.serialization.ByteArrayDeserializer"
   tags => ["predicted"]
  }
}

filter {
    mutate {
        add_field => {
          "unix_ts" => "%{[@metadata][kafka][key]}"
        }
        convert => {
          "unix_ts" => "float"
        }
        remove_field => ["@version", "@timestamp"]
    }

    date {
      match => [ "unix_ts", "UNIX" ]
      target => "timestamp"
      remove_field => ["unix_ts"]
    }

    if "simulated" in [tags] {
      mutate {
        remove_field => ["daytime", "temperature"]
      }
  }
}

output {
  if "simulated" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "kafka-simulated-consumption"
     }
  }
  else if "predicted" in [tags]{
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "kafka-predicted-consumption"
      document_id => "%{[@metadata][kafka][key]}"
   }
  }
}
